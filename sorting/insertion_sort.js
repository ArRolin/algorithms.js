// টেস্ট এ্যারে - এইটাকে আমরা সর্ট করবো
const list = [2, 1, 7, 3, 9, 8, 21, 45, 11, 3, 17];

function insertionSort(list) {
    // শুরু করবো ২য় আইটেম থেকে
    let i = 1;


    while (i < list.length) {
        // আমরা সব সময় কারেন্ট আইটেমের বাম পাশের আইটেম গুলোকে সর্টেড অবস্থায় রাখবো
        // প্রতি লুপে আমরা আমাদের কারেন্ট আইটেম টা নিয়ে ঐ সর্টেড অংশে এর চেয়ে বড় ভ্যালু আছে
        // কিনা চেক করবো । যদি বড় ভ্যালু থাকে তবে তাদেরকে ডান দিকে সরিয়ে দিয়ে দিয়ে বর্তমান ভ্যালুর জন্য
        // জায়গা ফাকা করে নিবো । এরপর ঐ ফাকা জায়গায় আমাদের বর্তমান ভ্যালুটা বসিয়ে দিলে বাম পাশের অংশটা
        // আবারো সর্টেড অবস্থায় ফিরে যাবে । এভাবে সব গুলো আইটেমকে তাদের রাইটফুল পজিশনে বসিয়ে দিলেই কেল্লা ফতে!


        // প্রতিবার শুরু করবো কারেন্ট ইনডেক্স এর বাম পাশ থেকে (অর্থাৎ ইনডেক্স এক কম হবে)
        let j = i - 1;

        // আমরা ভিতরের লুপে জায়গা ফাকা করার জন্য আইটেম গুলোকে ডান পাশে পুশ করতে থাকবো এর ফলে list[i] এর বর্তমান ভ্যালু
        // পরিবর্তন হয়ে যাবে । কিন্তু এই ভ্যালু আমাদের পরে লাগবে, তাই আমরা এটাকে আলাদা ভ্যারিয়েবলে সযত্নে সংরক্ষন করলাম ।
        let current = list[i];

        //  এই লুপে মূলত আমরা বাম পাশের সর্টেড অংশে আমাদের কারেন্ট ভ্যালুর চেয়ে বড় আইটেম আছে কিনা দেখবো, থাকলে সেগুলো কে ডান দিকে
        // ঠেলে দিয়ে আমাদের এই আইটেম বসিয়ে দিবো
        while (j >= 0 && list[j] >= current) {
            list[j + 1] = list[j];
            j--;
        }

        // ফাকা জায়গা রেডী, বর্তমান আইটেম বসিয়ে দেই
        list[j + 1] = current;

        // এই আইটেমের কাজ শেষ, পরের আইটেম সর্ট করার পালা
        i++
    }

    // কোড ঠিক ঠাক মত লিখে থাকলে এতক্ষনে লিস্ট সর্টেড হয়ে গেছে
    return list;
}

// আসুন টেস্ট করে দেখি
const result = insertionSort(list);

// কাজ করে?
console.log(result);

